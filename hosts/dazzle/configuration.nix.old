# Edit this configuration file to define what should be installed on
# your system. Help is available in the configuration.nix(5) man page, on
# https://search.nixos.org/options and in the NixOS manual (`nixos-help`).

{ config, lib, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    "${builtins.fetchGit { url = "https://github.com/NixOS/nixos-hardware.git"; }}/apple/t2"
    ];
  
  hardware.apple-t2.enableAppleSetOsLoader = true;
  hardware.apple-t2.enableTinyDfr = false;
  hardware.apple.touchBar.enable = true;

  hardware.firmware = [
    (pkgs.stdenvNoCC.mkDerivation (final: {
      name = "brcm-firmware";
      src = ./firmware/brcm;
      installPhase = ''
        mkdir -p $out/lib/firmware/brcm
        cp ${final.src}/* "$out/lib/firmware/brcm"
      '';
    }))
  ];

  # Use the systemd-boot EFI boot loader.  
  boot.loader = {
    efi.canTouchEfiVariables = true;
    efi.efiSysMountPoint = "/boot"; # make sure to change this to your EFI partition!
    systemd-boot.enable = true;
  };

  networking.hostName = "dazzle"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Enable networking
  networking.networkmanager.enable = true;

  # Set your time zone.
  time.timeZone = "America/Chicago";

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";
  console = {
    font = "sun12x22";
  #   keyMap = "us";
    useXkbConfig = true; # use xkb.options in tty.
  };
  
  i18n.extraLocaleSettings = {
    LC_ADDRESS = "en_US.UTF-8";
    LC_IDENTIFICATION = "en_US.UTF-8";
    LC_MEASUREMENT = "en_US.UTF-8";
    LC_MONETARY = "en_US.UTF-8";
    LC_NAME = "en_US.UTF-8";
    LC_NUMERIC = "en_US.UTF-8";
    LC_PAPER = "en_US.UTF-8";
    LC_TELEPHONE = "en_US.UTF-8";
    LC_TIME = "en_US.UTF-8";
  };

  # Enable the X11 windowing system and configure display manager
  services.xserver.enable = true;

  # Auto upgrade
  system.autoUpgrade.enable = true;

  # Enable hyprland on NixOS
  programs.hyprland = {
    enable = true;
    xwayland.enable = true;
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # Enable Flakes
  nix.settings.experimental-features = [ "nix-command" "flakes" ];

#  environment.systemPackages = [
#
#    (pkgs.waybar.overrideAttrs (oldAttrs: {
#        mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexpermental=true" ];
#      })
#    )
#  ];

  # Hint for electron apps to use wayland
  environment.sessionVariables = {
   NIXOS_OZONE_WL = "1";
   ELECTRON_OZONE_PLATFORM_HINT = "wayland";
  };

  xdg.portal.enable = true;
  xdg.portal.extraPortals = [ pkgs.xdg-desktop-portal-gtk ];

  # Suspend after 60 minutes
  services.logind.extraConfig = ''
    IdleAction=suspend
    IdleActionSec=60min
  '';

   # Fonts
  fonts = {
   packages = with pkgs; [
     noto-fonts
     noto-fonts-cjk-sans
     font-awesome
     poppins
     source-han-sans
     source-han-sans-japanese
     source-han-serif-japanese
  ];
  fontconfig.defaultFonts = {
   serif = [ "Noto Serif" "Source Han Serif" ];
   sansSerif = [ "Poppins" "Noto Sans" "Source Han Sans" ];
   };
};
  
  security.polkit.enable = true;
  security.pam.services.swaylock = {};

  # Disabled sddm for greetd
  services.displayManager.sddm.enable = false;


  # Disable GNOME since we're replacing it with Hyprland
  services.xserver.desktopManager.gnome.enable = false;
  services.xserver.displayManager.gdm.enable = false;

  # X11 Keymap & Layout
  services.xserver.xkb.layout = "us";
  services.xserver.xkb.variant = "";

  # Enable 3D Stuff
  # hardware  = {
  #   graphics.enable32Bit = true;
  #   graphics.enable = true;
  # };
  
  # Enable AMD Driver
  services.xserver.videoDrivers = ["amdgpu"];
  
  # Enable CUPS to print documents.
  services.printing.enable = true;

  # Enable sound with pipewire.
  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    jack.enable = true;

    # use the example session manager (no others are packaged yet so this is enabled by default,
    # no need to redefine it in your config for now)
    #media-session.enable = true;
  };

  # Enable touchpad support (enabled default in most desktopManager).
  services.libinput.enable = true;

  # Auto Login
  services.greetd = {
   enable = true;
    settings = {
     default_session = {
       command = "Hyprland";
       user = "emet";
     };
   };
  vt = 7;
};

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.emet = {
    home = "/home/emet";
    isNormalUser = true;
    description = "John Michael";
    openssh.authorizedKeys.keys = [ "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKaxtmB1X6IDyQGmtqUA148c4v/YBctuOBxLw6n0dsUY jm-ecc" ];
    extraGroups = [ "flatpak" "disk" "qemu" "kvm" "libvirtd" "sshd" "networkmanager" "wheel" "audio" "video" "root" ];
     packages = with pkgs; [
       bitwarden-desktop
       evolution
       evolution-ews
       kitty # Terminal emulator, recommended for Hyprland
       onlyoffice-bin_latest
       signal-desktop
       tree
       vivaldi
       vivaldi-ffmpeg-codecs
       yazi
     ];
  };

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
    brightnessctl
    colorls
    curl
    discord
    dunst
    fastfetch
    flatpak
    git
    hypridle
    hyprland
    hyprlock
    libnotify
    neovim
    networkmanagerapplet
    nix-output-monitor
    pavucontrol
    pkgs.kitty # required for the default Hyprland config
    rofi-wayland
    swww
    unzip
    vim
    waybar
    wget
    wl-clipboard
    zip
  ];

###########################################################################
## See https://github.com/resident3366/nixos/blob/main/configuration.nix ##
## for more settings that I'm skipping e.g. Steam, realtime pam sec. etc.##
###########################################################################

 # Take out the Trash
  nix.gc = {
   automatic = true;
   dates = "weekly";
   options = "--delete-older-than 7d";
};

 # Auto optimise store
  nix.optimise.automatic = true;
  nix.optimise.dates = [ "01:30" ];

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;

  programs.gnupg.agent = {
    enable = true;
    enableSSHSupport = true;
  };

  # List services that you want to enable:

  services.flatpak.enable = true;
  # services.protonmail-bridge.enable = true;

  # Enable the OpenSSH daemon.
  services.openssh.enable = true;


  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # Copy the NixOS configuration file and link it from the resulting system
  # (/run/current-system/configuration.nix). This is useful in case you
  # accidentally delete configuration.nix.
  system.copySystemConfiguration = true;

  # This option defines the first version of NixOS you have installed on this particular machine,
  # and is used to maintain compatibility with application data (e.g. databases) created on older NixOS versions.
  #
  # Most users should NEVER change this value after the initial install, for any reason,
  # even if you've upgraded your system to a new NixOS release.
  #
  # This value does NOT affect the Nixpkgs version your packages and OS are pulled from,
  # so changing it will NOT upgrade your system - see https://nixos.org/manual/nixos/stable/#sec-upgrading for how
  # to actually do that.
  #
  # This value being lower than the current NixOS release does NOT mean your system is
  # out of date, out of support, or vulnerable.
  #
  # Do NOT change this value unless you have manually inspected all the changes it would make to your configuration,
  # and migrated your data accordingly.
  #
  # For more information, see `man configuration.nix` or https://nixos.org/manual/nixos/stable/options#opt-system.stateVersion .
  system.stateVersion = "24.11"; # Did you read the comment?

}

